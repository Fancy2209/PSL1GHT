ifeq ($(strip $(PS3DEV)),)
  ifeq ($(strip $(DEVKITPS3)),)
    export PS3DEV := /usr/local/ps3dev
  else
    export PS3DEV := $(DEVKITPS3)
  endif
endif

export PATH	:=	$(PS3DEV)/bin:$(PS3DEV)/spu/bin:$(PATH)

export PORTLIBS	:=	$(PS3DEV)/portlibs/spu

export LIBPSL1GHT_INC	:=	-I$(PSL1GHT)/spu/include -I$(PSL1GHT)/spu/include/simdmath
export LIBPSL1GHT_LIB	:=	-L$(PSL1GHT)/spu/lib

export WM_CFLAGS		:= -Os -mfixed-range=80-127 -funroll-loops -fschedule-insns
export WM_STACK			?= 0x39e0
export WM_LDFLAGS		:= -nostdlib \
						   -Wl,--defsym=__stack=$(WM_STACK) \
						   -Wl,-Ttext-segment=0x2a00 \
						   -Wl,--entry,mars_module_entry -Wl,-u,mars_module_entry \
						   -Wl,--gc-sections \
						   -Wl,--sort-common \
						   -Wl,--sort-section=alignment \
			   			   -Wl,--cref \
						   -Wl,-s

export TASK_CFLAGS		:= -Os -ffast-math -ftree-vectorize -funroll-loops -fschedule-insns
export TASK_LDFLAGS 	:= -Wl,-Ttext-segment=0x3a00 -Wl,--gc-sections -Wl,--local-store=0x3a00:0x3FFFF \
						   -lspumarstask -lspumars -lsputhread

export JOB_CFLAGS		:= -Os -fpic -ffast-math -ftree-vectorize -funroll-loops -fschedule-insns
export JOB_LDFLAGS 		:= -fpic -Wl,--gc-sections \
						   -lspumarsjq -lspumars -lsputhread

PREFIX	:=	spu-

MACHDEP = -mdual-nops -fmodulo-sched -ffunction-sections -fdata-sections

include $(PSL1GHT)/base_rules

#---------------------------------------------------------------------------------
%.task:
	$(VERB) echo linking ... $(notdir $@)
	$(VERB) $(LD)  $^ $(TASK_LDFLAGS) $(LDFLAGS) $(LIBPATHS) $(LIBS) -o $@

%.jq:
	$(VERB) echo linking ... $(notdir $@)
	$(VERB) $(LD)  $^ $(JOB_LDFLAGS) $(LDFLAGS) $(LIBPATHS) $(LIBS) -o $@

%.wm:
	$(VERB) echo linking ... $(notdir $@)
	$(VERB) $(LD)  $^ $(WM_LDFLAGS) $(LDFLAGS) $(LIBPATHS) $(LIBS) -o $@
